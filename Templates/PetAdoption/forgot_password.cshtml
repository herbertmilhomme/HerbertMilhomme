@* Remove this section if you are using bundling *@
@section FooterJS{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
	<script type="text/javascript">
            $(document).ready(function () {

                // ===========Featured Owl Carousel============
                if ($(".owl-carousel-featured").length > 0) {
                    $(".owl-carousel-featured").owlCarousel({
                        items: 3,
                        lazyLoad: true,
                        pagination: true,
                        autoPlay: 5000,
                        stopOnHover: true
                    });
                }

                // ==================Counter====================
                $('.item-count').countTo({
                    formatter: function (value, options) {
                        return value.toFixed(options.decimals);
                    },
                    onUpdate: function (value) {
                        console.debug(this);
                    },
                    onComplete: function (value) {
                        console.debug(this);
                    }
                });
            });
        </script>
}

@{
    bool passwordSent = false;
    var resetToken = "";
    var email = Request.Form["email"] ?? Request.QueryString["email"];

    // Setup validation
    Validation.RequireField("email", "The email address field is required.");

    if (IsPost) {
        AntiForgery.Validate();
        // validate email
        bool isValid = true;
        if (Validation.IsValid()) {
            if (WebSecurity.GetUserId(email) > -1 && WebSecurity.IsConfirmed(email)) {
                resetToken = WebSecurity.GeneratePasswordResetToken(email); // Optionally specify an expiration date for the token
            } else {
                passwordSent = true; // We don't want to disclose that the user does not exist.
                isValid = false;
            }
        }
        if (isValid) {
            var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
            var resetUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/PasswordReset?resetToken=" + HttpUtility.UrlEncode(resetToken));
            WebMail.Send(
                to: email,
                subject: "Please reset your password", 
                body: "Use this password reset token to reset your password. The token is: " + resetToken + @". Visit <a href=""" + HttpUtility.HtmlAttributeEncode(resetUrl) + @""">" + resetUrl + "</a> to reset your password."
            );
            passwordSent = true;
        }
    }
}

            <section class="main">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-5 login-form">
                            <div class="panel panel-default">
                                <div class="panel-intro text-center">
                                    <h1 class="logo"><i class="fa fa-recycle"></i> Dlapak</h1>
                                </div>
                                <div class="panel-body">
                                    <form>
                                        <div class="form-group">
                                            <input type="text" id="email" name="email" placeholder="Your Email or Username" class="form-control input-lg">
                                        </div>
                                        <div class="form-group">
                                            <button class="btn btn-block btn-custom">Reset Password</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <p class="text-center">Don't have an account? <a href="signup.html"><strong>Signup</strong></a></p>
                        </div>
                    </div>
                </div>
            </section>